buildscript {
    def myPlantRepo = Eval.me(innioRepositories)['myPlant']
    repositories {
        mavenLocal()
        maven {
            url myPlantRepo['url']
            credentials {
                username myPlantRepo['username']
                password myPlantRepo['password']
            }
        }
        jcenter()
    }
    dependencies {
        classpath "io.myplant.gradle:gradle-plugins:1.6.0"
    }
}

plugins {
    id 'idea'
    id 'java'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

apply plugin: 'io.myplant.gradle.standards'

group = 'io.myplant.example'
version = '0.1'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    set('springCloudVersion', 'Hoxton.SR3')
    artifactName = project.name + '_' + getVersion()
    testContainersVersion = '1.14.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    // implementation 'org.hibernate.validator:hibernate-validator:6.1.3.Final'
    implementation 'org.postgresql:postgresql'

    runtime 'net.logstash.logback:logstash-logback-encoder:6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
}

// Task configurations

bootRun {
    args = ['--spring.profiles.active=' + System.properties.get('spring.profiles.active', 'dev')]
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'

    testLogging {
        events 'started', 'passed', 'skipped', 'failed'
    }
}
